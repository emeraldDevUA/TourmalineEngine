It's mostly that the Wavefront OBJ is going to be used to load 3D models and material libraries.

    By default, a 3d resource folder is configured. let it be ..../3d_res
after which you have to create a folder with a 3d model and a .mtl file.
If all the files are parsed correctly, this mechanism provides a developer with a
convenient and framework-like way to load 3D model in PBR.

If you are not willing to do that, you can still load models and textures manually, however
this option may result in unnecessary code overhead, which is rarely a good idea.

Obj splines are only expected to have limited support:
One at a file and standalone(They won't be interpreted together with obj files).

All the models are loaded in "Mesh" objects which encapsulate "VBOs".
It is possible to configure te loading process,
so it eiter loads all the stuff in a single VBO or separates
them object by object (not implemented as of 12.08.2024 ).

This ensures that the amount of draw calls is not higher than it should be, yet
separate texturing is implemented.


Model itself is stored as mesh tree (k-ary tree) that is formed by an end user.
This data structure simply makes more sense than a list or map, besides that, it provides
matrix-transfer lift ( update root - leaves are updated, etc ). This move saves us a bunch of code lines.
